{"pageProps":{"entry":{"entry":"websub","title":"PubSubHubbub について","date":"2020-05-04","tags":["Web"],"type":"md"},"text":"<p>この記事は、<a href=https://pubsubhubbub.appspot.com target='_blank' rel='noopener'>pubsubhubbub.appspot.com</a> で Subscribe した時の挙動について書く。</p>\n<p>pubsubhubbub.appspot.com は <a href=https://pubsubhubbub.github.io/PubSubHubbub/pubsubhubbub-core-0.4.html target='_blank' rel='noopener'>PubSubHubbub Core 0.4</a> と Permanent subscriptions を除く <a href=https://pubsubhubbub.github.io/PubSubHubbub/pubsubhubbub-core-0.3.html target='_blank' rel='noopener'>PubSubHubbub Core 0.3</a> に従っている。</p>\n<p>PubSubHubbub とは、Subscriber 側から見た場合は Webhook である。現在は W3C によって <a href=https://w3c.github.io/websub/ target='_blank' rel='noopener'>WebSub</a> として公開されている。WebSub は PubSubHubbub Core 0.4 と概ね同じだと思われる (あまり読み込んでいない)。</p>\n<h2>PubSubHubbub Core 0.4</h2>\n<p>仕様を正確に翻訳したものではない。実装する際には元の仕様を参照することをおすすめする。</p>\n<h3>用語</h3>\n<dl>\n    <dt>Topic</dt>\n    <dd>HTTP の URL。変更を購読するリソースを一意に表す。</dd>\n    <dt>Hub</dt>\n    <dd>PubSubHubbub の Subscribing と Publishing をどちらも実装するサーバ。</dd>\n    <dt>Subscriber</dt>\n    <dd>Topic の更新を受け取るエンティティ。</dd>\n    <dt>Subscription</dt>\n    <dd>Topic とその更新通知を受け取る Subscriber の一意な関係。Topic URL と Subscriber Callback URL をキーとする。</dd>\n    <dt>Subscriber Callback URL</dt>\n    <dd>Subscriber が通知を受け取る URL。</dd>\n</dl>\n\n<p>参照: <a href=https://pubsubhubbub.github.io/PubSubHubbub/pubsubhubbub-core-0.4.html#rfc.section.2 target='_blank' rel='noopener'>2. Definitions</a></p>\n<h3>Subscribing</h3>\n<p>購読を登録するとき、次のような流れとなる。</p>\n<ol>\n<li>Subscriber が Hub に Subscription Request を送信する</li>\n<li>Hub が Subscription Request を検証する (OPTIONAL)</li>\n<li>Hub が Subscriber に Verificatin Request を送信する</li>\n<li>Subscriber が Hub に Verification Response を返す</li>\n</ol>\n<p>参照: <a href=https://pubsubhubbub.github.io/PubSubHubbub/pubsubhubbub-core-0.4.html#rfc.section.5 target='_blank' rel='noopener'>5. Subscribing and Unsubscribing</a></p>\n<h3>Subscription Request</h3>\n<p>以下のパラメータを <code>Content-Type: application/x-www-form-urlencoded</code> で POST する。</p>\n<dl>\n    <dt>hub.callback</dt>\n    <dd>REQUIRED. Subscriber Callback URL。配信通知はこの URL に対して POST される。クエリパラメータは保持される (<a href='https://pubsubhubbub.github.io/PubSubHubbub/pubsubhubbub-core-0.4.html#rfc.section.5.1.1' rel='noopener' target='_blank'>5.1.1. Subscription Parameter Details</a>)。</dd>\n    <dt>hub.mode</dt>\n    <dd>REQUIRED. <code>subscribe</code> あるいは <code>unsubscribe</code> のいずれかの値をとる。</dd>\n    <dt>hub.topic</dt>\n    <dd>REQUIRED. 購読する Topic の URL。</dd>\n    <dt>hub.lease_seconds</dt>\n    <dd>OPTIONAL. 購読の有効な時間 (秒)。Hub はこの値に従ってもよいし、従わなくともよい。<code>hub.mode</code> が <code>unsubscribe</code> の場合は無視される。</dd>\n    <dt>hub.secret</dt>\n    <dd>OPTIONAL. 後に Subscriber が更新通知を検証できるようにするための値。詳しくは後述。</dd>\n</dl>\n\n<p>既に有効な Subscription がある場合、Hub は Subscription を更新する。Subscription の確認に失敗した場合は、以前の購読状態を継続する。</p>\n<p>参照: <a href=https://pubsubhubbub.github.io/PubSubHubbub/pubsubhubbub-core-0.4.html#rfc.section.5.1 target='_blank' rel='noopener'>5.1. Subscriber Sends Subscription Request</a></p>\n<h3>Subscription Response</h3>\n<p>Hub は HTTP <code>202 Accepted</code> によって、Subscription Request が検証され、確認されることを示す。エラーが発生した場合、Hub は 4xx または 5xx を返す。</p>\n<p>参照: <a href=https://pubsubhubbub.github.io/PubSubHubbub/pubsubhubbub-core-0.4.html#rfc.section.5.1.2 target='_blank' rel='noopener'>5.1.2. Subscription Response Details</a></p>\n<h3>Verification Request</h3>\n<p>Subscription Request が正しいものかを確認するため、Hub は Subscriber Callback URL に以下のクエリパラメータとともに GET リクエストを送信する。</p>\n<dl>\n    <dt>hub.mode</dt>\n    <dd>REQUIRED. Subscription Request に指定した値と同じ値を示す。</dd>\n    <dt>hub.topic</dt>\n    <dd>REQUIRED. Subscription Request に指定した値と同じ値を示す。</dd>\n    <dt>hub.challenge</dt>\n    <dd>REQUIRED. Hub によって生成されたランダムな文字列。Subscriber はこの値をレスポンスとして返すことにより、Subscription を確認する。</dd>\n    <dt>hub.lease_seconds</dt>\n    <dd>REQUIRED/OPTIONAL. <code>hub.mode</code> が <code>subscribe</code> の場合、REQUIRED となる。Hub によって決定された購読の有効な時間 (秒) を表す。</dd>\n</dl>\n\n<p>参照: <a href=https://pubsubhubbub.github.io/PubSubHubbub/pubsubhubbub-core-0.4.html#rfc.section.5.3 target='_blank' rel='noopener'>5.3. Hub Verifies Intent of the Subscriber</a></p>\n<p>リクエストされた内容が正しい場合、Subscriber は <code>hub.challenge</code> の値をレスポンスボディに含め、2xx を返す。リクエストされた内容が正しくない場合、Subscriber は 404 を返す。</p>\n<p>その他のステータスコードを返した場合、またはレスポンスボディが <code>hub.challenge</code> の値と異なる場合、確認は失敗する。</p>\n<p>参照: <a href=https://pubsubhubbub.github.io/PubSubHubbub/pubsubhubbub-core-0.4.html#rfc.section.5.3.1 target='_blank' rel='noopener'>5.3.1. Verification Details</a></p>\n<h3>更新の通知</h3>\n<p>コンテンツが更新された時、Hub は Subscriber Callback URL に POST リクエストを送信する。</p>\n<p>リクエストを受け取ったとき、Subscriber は 2xx を返さなければならない。それ以外のステータスコードを返した場合、通知は失敗したとみなされる (リダイレクトも機能しない)。2xx のレスポンスはあくまで正常に通知を受け取ったことを表すのみであり、通知の内容が正しいことを示すものではない。</p>\n<p>リクエストには、RFC5988 に規定される <a href=https://tools.ietf.org/html/rfc5988 target='_blank' rel='noopener'>Link Header</a> が付与される。<code>rel=hub</code> には Hub の URL を、<code>rel=self</code> には Topic の URL が指定される。</p>\n<p>参照: <a href=https://pubsubhubbub.github.io/PubSubHubbub/pubsubhubbub-core-0.4.html#contentdistribution target='_blank' rel='noopener'>7. Content Distribution</a></p>\n<h3>検証可能な更新の通知</h3>\n<p>Subscription Request に <code>hub.secret</code> を含めた場合、Hub はペイロードの HMAC 署名をヘッダに付与する。署名は 40 バイトの 16 進数表示の SHA-1 である。ヘッダの形式は次のようになる。</p>\n<pre>\n<code>X-Hub-Signature: sha1=<signature></code>\n</pre><p>これにより、通知の内容が第三者に偽造されたものではないことを確認できる。</p>\n<p><a href=https://pubsubhubbub.github.io/PubSubHubbub/pubsubhubbub-core-0.4.html#authednotify target='_blank' rel='noopener'>8. Authenticated Content Distribution</a></p>\n<h2>PubSubHubbub Core 0.3 による追加事項</h2>\n<h3>メッセージの形式</h3>\n<p>更新の通知は <a href=https://tools.ietf.org/html/rfc4287 target='_blank' rel='noopener'>Atom</a> あるいは <a href=https://www.rssboard.org/rss-specification target='_blank' rel='noopener'>RSS</a> の形式である。</p>\n<p>参照: <a href=https://pubsubhubbub.github.io/PubSubHubbub/pubsubhubbub-core-0.3.html#anchor4 target='_blank' rel='noopener'>4.  Atom Details</a></p>\n<h3>Subscription Request</h3>\n<p>以下のパラメータが追加される。</p>\n<dl>\n    <dt>hub.verify</dt>\n    <dd>REQUIRED. Subscriber が Subscription を確認する方法を指定する。<code>sync</code> あるいは <code>async</code> のいずれの値をとる。</dd>\n    <dt>hub.verify_token</dt>\n    <dd>OPTIONAL. 指定した場合、Hub はこの値を Verification Request のクエリパラメータに付与する。</dd>\n</dl>\n\n<p>参考: <a href=https://pubsubhubbub.github.io/PubSubHubbub/pubsubhubbub-core-0.3.html#anchor5 target='_blank' rel='noopener'>6.1.  Subscriber Sends Subscription Request</a></p>\n<h3>Verification Request</h3>\n<p>以下のクエリパラメータが追加される。</p>\n<dl>\n    <dt>hub.verify_token</dt>\n    <dd>OPTIONAL. Subscription Request に指定した値をそのまま含む。</dd>\n</dl>\n\n<p>以下のパラメータが変更される。</p>\n<dl>\n    <dt>hub.lease_seconds</dt>\n    <dd>OPTIONAL/REQUIRED. 値が含まれていた場合の挙動は PubSubHubbub Core 0.4 と同一である。値が含まれない場合、後述するように Subscription の更新の挙動が変わる。</dd>\n</dl>\n\n<p>参照: <a href=https://pubsubhubbub.github.io/PubSubHubbub/pubsubhubbub-core-0.3.html#verifysub target='_blank' rel='noopener'>6.2.  Hub Verifies Intent of the Subscriber</a></p>\n<h3>自動的な Subscription の更新</h3>\n<p>注意: pubsubhubbub.appspot.com では非対応である。</p>\n<p><code>hub.lease_seconds</code> が経過する前に、Hub は自動的に Subscription の確認を行う。</p>\n<p>参照: <a href=https://pubsubhubbub.github.io/PubSubHubbub/pubsubhubbub-core-0.3.html#autorefresh target='_blank' rel='noopener'>6.3 Automatic Subscription Refresh</a></p>\n<h2>pubsubhubbub.appspot.com の挙動</h2>\n<p>筆者が自分の環境で確認したものである。仕様に定められた挙動ではないため、将来的に変更される可能性もある。</p>\n<h3>Subscription Request の宛先</h3>\n<p>送信先は <code>https://pubsubhubbub.appspot.com/subscribe</code> である。</p>\n<h3>Subscription Response のステータスコード</h3>\n<p><code>hub.verify</code> が <code>sync</code> の場合、正常に Subscription Request が受理されたときは 204 No Content を返す。</p>\n<h3>Permanent Subscription の非対応</h3>\n<p>PubSubHubbub Core 0.3 の 6.3 Automatic Subscription Refresh には対応しない。Subscriber は hub.lease_seconds が経過する前に再び Subscription Request を行う必要がある。</p>\n<h2>補足・考察</h2>\n<p>pubsubhubbub.appspot.com は PubSubHubbub Core 0.4 に加えて PubSubHubbub Core 0.3 も参照するが、Permanent Subscription には非対応であるため、実用上は <code>hub.verify_token</code> が追加されることにだけ注意すれば良いと思われる。大抵の場合は <code>hub.verify</code> を <code>sync</code> として問題ないであろう。</p>\n<p>PubSubHubbub Core 0.3 では更新通知のメッセージ形式が Atom または RSS と規定されているが、PubSubHubbub Core 0.4 および WebSub では撤廃されている。これにより、より汎用性の高いプロトコルを目指したと思われる。</p>\n<p>また、新しいバージョンでは <code>hub.verify_token</code> も撤廃されている。このプロパティによって Verification Request を検証できるというメリットがあったが、これは Subscriber Callback URL に独自のクエリパラメータを付与することで代替できる。あるいは、第三者によって意図しない Subscription を登録されたとしても、更新通知を処理するかどうかは変わらず Subscriber の判断によるため、仕様から削除されたのかもしれない。</p>\n<p>Automatic Subscription Refresh の撤廃は、より簡単な Webhook の登録を目指すという観点からは悪手であろう。一方、PubSubHubbub はそもそも RSS や Atom フィードのリアルタイム化を目指したものであること (<a href=https://ja.wikipedia.org/wiki/WebSub target='_blank' rel='noopener'>Wikipedia</a> を参照のこと) を踏まえれば妥当であるともいえる。もし Subscriber が Subscription の更新を忘れてしまったとしても、最新の更新情報は元のリソースを参照することで簡単に取得できるからである。</p>\n<h2>経緯 (余談)</h2>\n<p>YouTube Data API v3 について調べていたのだが、Search: list (100 Units/Request) をむやみに叩くとすぐに制限 (10,000 Units/Day) に達してしまう。特定のチャンネルのアップデートを素早く受け取るために、<a href=https://developers.google.com/youtube/v3/guides/push_notifications target='_blank' rel='noopener'>PubSubHubbub をサポート</a>していた。</p>\n"},"__N_SSG":true}